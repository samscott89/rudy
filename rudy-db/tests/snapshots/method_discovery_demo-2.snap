---
source: rudy-db/tests/resolve.rs
expression: methods_by_type
snapshot_kind: text
---
{
    "&str": [
        DiscoveredMethod {
            name: "spec_to_string",
            full_name: "<str as alloc::string::SpecToString>::spec_to_string",
            signature: "fn(self: &str) -> String",
            address: 4294987180,
            self_type: Owned,
            callable: true,
        },
        DiscoveredMethod {
            name: "to_owned",
            full_name: "alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned",
            signature: "fn(self: &str) -> String",
            address: 4294988116,
            self_type: Owned,
            callable: true,
        },
        DiscoveredMethod {
            name: "to_string<str>",
            full_name: "<T as alloc::string::ToString>::to_string",
            signature: "fn(self: &str) -> String",
            address: 4294980024,
            self_type: Owned,
            callable: true,
        },
    ],
    "DefaultHasher": [
        DiscoveredMethod {
            name: "finish",
            full_name: "<std::hash::random::DefaultHasher as core::hash::Hasher>::finish",
            signature: "fn(self: &DefaultHasher) -> u64",
            address: 4294996848,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "write_str",
            full_name: "<std::hash::random::DefaultHasher as core::hash::Hasher>::write_str",
            signature: "fn(self: &mut DefaultHasher, s: &str)",
            address: 4294996892,
            self_type: BorrowedMut,
            callable: true,
        },
    ],
    "Global": [
        DiscoveredMethod {
            name: "alloc_impl",
            full_name: "alloc::alloc::Global::alloc_impl",
            signature: "fn(self: &Global, layout: Layout, zeroed: bool) -> Result<NonNull<[u8]>, AllocError>",
            address: 4294972540,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "allocate",
            full_name: "<alloc::alloc::Global as core::alloc::Allocator>::allocate",
            signature: "fn(self: &Global, layout: Layout) -> Result<NonNull<[u8]>, AllocError>",
            address: 4294973072,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "deallocate",
            full_name: "<alloc::alloc::Global as core::alloc::Allocator>::deallocate",
            signature: "fn(self: &Global, ptr: NonNull<u8>, layout: Layout)",
            address: 4294972944,
            self_type: Borrowed,
            callable: true,
        },
    ],
    "Group": [
        DiscoveredMethod {
            name: "convert_special_to_empty_and_full_to_deleted",
            full_name: "hashbrown::control::group::neon::Group::convert_special_to_empty_and_full_to_deleted",
            signature: "fn(self: Group) -> Group",
            address: 4294977956,
            self_type: Owned,
            callable: true,
        },
        DiscoveredMethod {
            name: "match_empty_or_deleted",
            full_name: "hashbrown::control::group::neon::Group::match_empty_or_deleted",
            signature: "fn(self: Group) -> BitMask",
            address: 4294977852,
            self_type: Owned,
            callable: true,
        },
        DiscoveredMethod {
            name: "match_full",
            full_name: "hashbrown::control::group::neon::Group::match_full",
            signature: "fn(self: Group) -> BitMask",
            address: 4294977748,
            self_type: Owned,
            callable: true,
        },
        DiscoveredMethod {
            name: "match_tag",
            full_name: "hashbrown::control::group::neon::Group::match_tag",
            signature: "fn(self: Group, tag: Tag) -> BitMask",
            address: 4294978092,
            self_type: Owned,
            callable: true,
        },
    ],
    "HashMap<String, String>": [
        DiscoveredMethod {
            name: "insert<alloc::string::String, alloc::string::String, std::hash::random::RandomState, alloc::alloc::Global>",
            full_name: "hashbrown::map::HashMap<K,V,S,A>::insert",
            signature: "fn(self: &mut HashMap<String, String>, k: String, v: String) -> Option<String>",
            address: 4294981828,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "insert<alloc::string::String, alloc::string::String, std::hash::random::RandomState>",
            full_name: "std::collections::hash::map::HashMap<K,V,S>::insert",
            signature: "fn(self: &mut HashMap<String, String>, k: String, v: String) -> Option<String>",
            address: 4294988568,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "iter<alloc::string::String, alloc::string::String, std::hash::random::RandomState, alloc::alloc::Global>",
            full_name: "hashbrown::map::HashMap<K,V,S,A>::iter",
            signature: "fn(self: &HashMap<String, String>) -> Iter<alloc::string::String, alloc::string::String>",
            address: 4294981628,
            self_type: Borrowed,
            callable: true,
        },
    ],
    "Hasher<core::hash::sip::Sip13Rounds>": [
        DiscoveredMethod {
            name: "finish<core::hash::sip::Sip13Rounds>",
            full_name: "<core::hash::sip::Hasher<S> as core::hash::Hasher>::finish",
            signature: "fn(self: &Hasher<core::hash::sip::Sip13Rounds>) -> u64",
            address: 4294979412,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "reset<core::hash::sip::Sip13Rounds>",
            full_name: "core::hash::sip::Hasher<S>::reset",
            signature: "fn(self: &mut Hasher<core::hash::sip::Sip13Rounds>)",
            address: 4294978712,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "write<core::hash::sip::Sip13Rounds>",
            full_name: "<core::hash::sip::Hasher<S> as core::hash::Hasher>::write",
            signature: "fn(self: &mut Hasher<core::hash::sip::Sip13Rounds>, msg: &[u8])",
            address: 4294978852,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "write_str<core::hash::sip::Sip13Rounds>",
            full_name: "<core::hash::sip::Hasher<S> as core::hash::Hasher>::write_str",
            signature: "fn(self: &mut Hasher<core::hash::sip::Sip13Rounds>, s: &str)",
            address: 4294979572,
            self_type: BorrowedMut,
            callable: true,
        },
    ],
    "Iter<alloc::string::String, alloc::string::String>": [
        DiscoveredMethod {
            name: "into_iter<std::collections::hash::map::Iter<alloc::string::String, alloc::string::String>>",
            full_name: "<I as core::iter::traits::collect::IntoIterator>::into_iter",
            signature: "fn(self: Iter<alloc::string::String, alloc::string::String>) -> Iter<alloc::string::String, alloc::string::String>",
            address: 4294988652,
            self_type: Owned,
            callable: true,
        },
        DiscoveredMethod {
            name: "next<alloc::string::String, alloc::string::String>",
            full_name: "<hashbrown::map::Iter<K,V> as core::iter::traits::iterator::Iterator>::next",
            signature: "fn(self: &mut Iter<alloc::string::String, alloc::string::String>) -> Option<(&String, &String)>",
            address: 4294981268,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "next<alloc::string::String, alloc::string::String>",
            full_name: "<std::collections::hash::map::Iter<K,V> as core::iter::traits::iterator::Iterator>::next",
            signature: "fn(self: &mut Iter<alloc::string::String, alloc::string::String>) -> Option<(&String, &String)>",
            address: 4294988408,
            self_type: BorrowedMut,
            callable: true,
        },
    ],
    "LocalKey<core::cell::Cell<(u64, u64)>>": [
        DiscoveredMethod {
            name: "try_with<core::cell::Cell<(u64, u64)>, std::hash::random::{impl#0}::new::{closure_env#0}, std::hash::random::RandomState>",
            full_name: "std::thread::local::LocalKey<T>::try_with",
            signature: "fn(self: &LocalKey<core::cell::Cell<(u64, u64)>>, f: {closure_env#0}) -> Result<RandomState, AccessError>",
            address: 4294979744,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "with<core::cell::Cell<(u64, u64)>, std::hash::random::{impl#0}::new::{closure_env#0}, std::hash::random::RandomState>",
            full_name: "std::thread::local::LocalKey<T>::with",
            signature: "fn(self: &LocalKey<core::cell::Cell<(u64, u64)>>, f: {closure_env#0}) -> RandomState",
            address: 4294979664,
            self_type: Borrowed,
            callable: true,
        },
    ],
    "RandomState": [
        DiscoveredMethod {
            name: "build_hasher",
            full_name: "<std::hash::random::RandomState as core::hash::BuildHasher>::build_hasher",
            signature: "fn(self: &RandomState) -> DefaultHasher",
            address: 4294996948,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "hash_one<std::hash::random::RandomState, &alloc::string::String>",
            full_name: "core::hash::BuildHasher::hash_one",
            signature: "fn(self: &RandomState, x: &String) -> u64",
            address: 4294970232,
            self_type: Borrowed,
            callable: true,
        },
    ],
    "Range<u64>": [
        DiscoveredMethod {
            name: "into_iter<core::ops::range::Range<u64>>",
            full_name: "<I as core::iter::traits::collect::IntoIterator>::into_iter",
            signature: "fn(self: Range<u64>) -> Range<u64>",
            address: 4294988852,
            self_type: Owned,
            callable: true,
        },
        DiscoveredMethod {
            name: "next<u64>",
            full_name: "core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next",
            signature: "fn(self: &mut Range<u64>) -> Option<u64>",
            address: 4294988816,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "spec_next<u64>",
            full_name: "<core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next",
            signature: "fn(self: &mut Range<u64>) -> Option<u64>",
            address: 4294988872,
            self_type: BorrowedMut,
            callable: true,
        },
    ],
    "RawIterRange<(alloc::string::String, alloc::string::String)>": [
        DiscoveredMethod {
            name: "next_impl<(alloc::string::String, alloc::string::String), false>",
            full_name: "hashbrown::raw::RawIterRange<T>::next_impl",
            signature: "fn(self: &mut RawIterRange<(alloc::string::String, alloc::string::String)>) -> Option<Bucket<(alloc::string::String, alloc::string::String)>>",
            address: 4294991640,
            self_type: BorrowedMut,
            callable: true,
        },
    ],
    "RawTable<(alloc::string::String, alloc::string::String), alloc::alloc::Global>": [
        DiscoveredMethod {
            name: "drop<(alloc::string::String, alloc::string::String), alloc::alloc::Global>",
            full_name: "<hashbrown::raw::RawTable<T,A> as core::ops::drop::Drop>::drop",
            signature: "fn(self: &mut RawTable<(alloc::string::String, alloc::string::String), alloc::alloc::Global>)",
            address: 4294977468,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "find_or_find_insert_slot<(alloc::string::String, alloc::string::String), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0}<alloc::string::String, alloc::string::String, alloc::string::String>, hashbrown::map::make_hasher::{closure_env#0}<alloc::string::String, alloc::string::String, std::hash::random::RandomState>>",
            full_name: "hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot",
            signature: "fn(self: &mut RawTable<(alloc::string::String, alloc::string::String), alloc::alloc::Global>, hash: u64, eq: {closure_env#0}<alloc::string::String, alloc::string::String, alloc::string::String>, hasher: {closure_env#0}<alloc::string::String, alloc::string::String, std::hash::random::RandomState>) -> Result<Bucket<(alloc::string::String, alloc::string::String)>, InsertSlot>",
            address: 4294992704,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "insert_in_slot<(alloc::string::String, alloc::string::String), alloc::alloc::Global>",
            full_name: "hashbrown::raw::RawTable<T,A>::insert_in_slot",
            signature: "fn(self: &mut RawTable<(alloc::string::String, alloc::string::String), alloc::alloc::Global>, hash: u64, slot: InsertSlot, value: (String, String)) -> Bucket<(alloc::string::String, alloc::string::String)>",
            address: 4294992128,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "reserve<(alloc::string::String, alloc::string::String), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<alloc::string::String, alloc::string::String, std::hash::random::RandomState>>",
            full_name: "hashbrown::raw::RawTable<T,A>::reserve",
            signature: "fn(self: &mut RawTable<(alloc::string::String, alloc::string::String), alloc::alloc::Global>, additional: u64, hasher: {closure_env#0}<alloc::string::String, alloc::string::String, std::hash::random::RandomState>)",
            address: 4294993228,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "reserve_rehash<(alloc::string::String, alloc::string::String), alloc::alloc::Global, hashbrown::map::make_hasher::{closure_env#0}<alloc::string::String, alloc::string::String, std::hash::random::RandomState>>",
            full_name: "hashbrown::raw::RawTable<T,A>::reserve_rehash",
            signature: "fn(self: &mut RawTable<(alloc::string::String, alloc::string::String), alloc::alloc::Global>, additional: u64, hasher: {closure_env#0}<alloc::string::String, alloc::string::String, std::hash::random::RandomState>, fallibility: Fallibility) -> Result<(), TryReserveError>",
            address: 4295209348,
            self_type: BorrowedMut,
            callable: true,
        },
    ],
    "RawTableInner": [
        DiscoveredMethod {
            name: "drop_elements<(alloc::string::String, alloc::string::String)>",
            full_name: "hashbrown::raw::RawTableInner::drop_elements",
            signature: "fn(self: &mut RawTableInner)",
            address: 4294989020,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "drop_inner_table<(alloc::string::String, alloc::string::String), alloc::alloc::Global>",
            full_name: "hashbrown::raw::RawTableInner::drop_inner_table",
            signature: "fn(self: &mut RawTableInner, alloc: &Global, table_layout: TableLayout)",
            address: 4294990140,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "find_insert_slot",
            full_name: "hashbrown::raw::RawTableInner::find_insert_slot",
            signature: "fn(self: &RawTableInner, hash: u64) -> InsertSlot",
            address: 4294984404,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "find_insert_slot_in_group",
            full_name: "hashbrown::raw::RawTableInner::find_insert_slot_in_group",
            signature: "fn(self: &RawTableInner, group: &Group, probe_seq: &ProbeSeq) -> Option<u64>",
            address: 4294985384,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "fix_insert_slot",
            full_name: "hashbrown::raw::RawTableInner::fix_insert_slot",
            signature: "fn(self: &RawTableInner, index: u64) -> InsertSlot",
            address: 4294982924,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "prepare_insert_slot",
            full_name: "hashbrown::raw::RawTableInner::prepare_insert_slot",
            signature: "fn(self: &mut RawTableInner, hash: u64) -> (u64, Tag)",
            address: 4294984672,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "prepare_rehash_in_place",
            full_name: "hashbrown::raw::RawTableInner::prepare_rehash_in_place",
            signature: "fn(self: &mut RawTableInner)",
            address: 4294984788,
            self_type: BorrowedMut,
            callable: true,
        },
    ],
    "RawVec<lldb_demo::User, alloc::alloc::Global>": [
        DiscoveredMethod {
            name: "drop<lldb_demo::User, alloc::alloc::Global>",
            full_name: "<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop",
            signature: "fn(self: &mut RawVec<lldb_demo::User, alloc::alloc::Global>)",
            address: 4294977416,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "grow_one<lldb_demo::User, alloc::alloc::Global>",
            full_name: "alloc::raw_vec::RawVec<T,A>::grow_one",
            signature: "fn(self: &mut RawVec<lldb_demo::User, alloc::alloc::Global>)",
            address: 4294993432,
            self_type: BorrowedMut,
            callable: true,
        },
    ],
    "ScopeGuard<&mut hashbrown::raw::RawTableInner, hashbrown::raw::{impl#12}::rehash_in_place::{closure_env#0}>": [
        DiscoveredMethod {
            name: "drop<&mut hashbrown::raw::RawTableInner, hashbrown::raw::{impl#12}::rehash_in_place::{closure_env#0}>",
            full_name: "<hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::drop::Drop>::drop",
            signature: "fn(self: &mut ScopeGuard<&mut hashbrown::raw::RawTableInner, hashbrown::raw::{impl#12}::rehash_in_place::{closure_env#0}>)",
            address: 4294977572,
            self_type: BorrowedMut,
            callable: true,
        },
    ],
    "ScopeGuard<hashbrown::raw::RawTableInner, hashbrown::raw::{impl#12}::prepare_resize::{closure_env#0}<alloc::alloc::Global>>": [
        DiscoveredMethod {
            name: "drop<hashbrown::raw::RawTableInner, hashbrown::raw::{impl#12}::prepare_resize::{closure_env#0}<alloc::alloc::Global>>",
            full_name: "<hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::drop::Drop>::drop",
            signature: "fn(self: &mut ScopeGuard<hashbrown::raw::RawTableInner, hashbrown::raw::{impl#12}::prepare_resize::{closure_env#0}<alloc::alloc::Global>>)",
            address: 4294977528,
            self_type: BorrowedMut,
            callable: true,
        },
    ],
    "Session": [
        DiscoveredMethod {
            name: "is_expired",
            full_name: "lldb_demo::Session::is_expired",
            signature: "fn(self: &Session) -> bool",
            address: 4294993844,
            self_type: Borrowed,
            callable: true,
        },
    ],
    "String": [
        DiscoveredMethod {
            name: "as_str",
            full_name: "alloc::string::String::as_str",
            signature: "fn(self: &String) -> &str",
            address: 4294987388,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "borrow<alloc::string::String>",
            full_name: "<T as core::borrow::Borrow<T>>::borrow",
            signature: "fn(self: &String) -> &String",
            address: 4294980112,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "deref",
            full_name: "<alloc::string::String as core::ops::deref::Deref>::deref",
            signature: "fn(self: &String) -> &str",
            address: 4294987544,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "eq",
            full_name: "<alloc::string::String as core::cmp::PartialEq>::eq",
            signature: "fn(self: &String, other: &String) -> bool",
            address: 4294987500,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "equivalent<alloc::string::String, alloc::string::String>",
            full_name: "<Q as hashbrown::Equivalent<K>>::equivalent",
            signature: "fn(self: &String, key: &String) -> bool",
            address: 4294980132,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "hash<std::hash::random::DefaultHasher>",
            full_name: "<alloc::string::String as core::hash::Hash>::hash",
            signature: "fn(self: &String, hasher: &mut DefaultHasher)",
            address: 4294980212,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "hash<alloc::string::String, std::hash::random::DefaultHasher>",
            full_name: "core::hash::impls::<impl core::hash::Hash for &T>::hash",
            signature: "fn(self: &&String, state: &mut DefaultHasher)",
            address: 4294980064,
            self_type: Borrowed,
            callable: true,
        },
    ],
    "TableLayout": [
        DiscoveredMethod {
            name: "calculate_layout_for",
            full_name: "hashbrown::raw::TableLayout::calculate_layout_for",
            signature: "fn(self: TableLayout, buckets: u64) -> Option<(Layout, u64)>",
            address: 4294982396,
            self_type: Owned,
            callable: true,
        },
    ],
    "Vec<User>": [
        DiscoveredMethod {
            name: "drop<lldb_demo::User, alloc::alloc::Global>",
            full_name: "<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop",
            signature: "fn(self: &mut Vec<User>)",
            address: 4294977360,
            self_type: BorrowedMut,
            callable: true,
        },
        DiscoveredMethod {
            name: "len<lldb_demo::User, alloc::alloc::Global>",
            full_name: "alloc::vec::Vec<T,A>::len",
            signature: "fn(self: &Vec<User>) -> u64",
            address: 4294987804,
            self_type: Borrowed,
            callable: true,
        },
        DiscoveredMethod {
            name: "push<lldb_demo::User, alloc::alloc::Global>",
            full_name: "alloc::vec::Vec<T,A>::push",
            signature: "fn(self: &mut Vec<User>, value: User)",
            address: 4294987828,
            self_type: BorrowedMut,
            callable: true,
        },
    ],
    "Vec<u8>": [
        DiscoveredMethod {
            name: "eq<u8, u8, alloc::alloc::Global, alloc::alloc::Global>",
            full_name: "alloc::vec::partial_eq::<impl core::cmp::PartialEq<alloc::vec::Vec<U,A2>> for alloc::vec::Vec<T,A1>>::eq",
            signature: "fn(self: &Vec<u8>, other: &Vec<u8>) -> bool",
            address: 4294987580,
            self_type: Borrowed,
            callable: true,
        },
    ],
    "u64": [
        DiscoveredMethod {
            name: "max<usize>",
            full_name: "core::cmp::Ord::max",
            signature: "fn(self: u64, other: u64) -> u64",
            address: 4294997548,
            self_type: Owned,
            callable: true,
        },
        DiscoveredMethod {
            name: "min<usize>",
            full_name: "core::cmp::Ord::min",
            signature: "fn(self: u64, other: u64) -> u64",
            address: 4294997676,
            self_type: Owned,
            callable: true,
        },
    ],
}
