---
source: rust-debuginfo/tests/mod.rs
expression: test_struct_type
snapshot_kind: text
---
Struct(
    StructDef {
        name: "TestStruct0",
        size: 112,
        alignment: 8,
        fields: [
            StructField {
                name: "id",
                offset: 104,
                ty: Primitive(
                    UnsignedInt(
                        UnsignedIntDef {
                            size: 8,
                        },
                    ),
                ),
            },
            StructField {
                name: "name",
                offset: 0,
                ty: Std(
                    String(
                        StringDef(
                            VecDef {
                                length_offset: 16,
                                data_ptr_offset: 8,
                                inner_type: Primitive(
                                    UnsignedInt(
                                        UnsignedIntDef {
                                            size: 1,
                                        },
                                    ),
                                ),
                            },
                        ),
                    ),
                ),
            },
            StructField {
                name: "data",
                offset: 24,
                ty: Std(
                    Vec(
                        VecDef {
                            length_offset: 16,
                            data_ptr_offset: 8,
                            inner_type: Primitive(
                                UnsignedInt(
                                    UnsignedIntDef {
                                        size: 1,
                                    },
                                ),
                            ),
                        },
                    ),
                ),
            },
            StructField {
                name: "flags",
                offset: 48,
                ty: Primitive(
                    Array(
                        ArrayDef {
                            element_type: Primitive(
                                Bool(
                                    (),
                                ),
                            ),
                            length: 8,
                        },
                    ),
                ),
            },
            StructField {
                name: "map",
                offset: 56,
                ty: Std(
                    Map(
                        MapDef {
                            key_type: Std(
                                String(
                                    StringDef(
                                        VecDef {
                                            length_offset: 16,
                                            data_ptr_offset: 8,
                                            inner_type: Primitive(
                                                UnsignedInt(
                                                    UnsignedIntDef {
                                                        size: 1,
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                ),
                            ),
                            value_type: Primitive(
                                Int(
                                    IntDef {
                                        size: 4,
                                    },
                                ),
                            ),
                            variant: HashMap {
                                bucket_mask_offset: 8,
                                ctrl_offset: 0,
                                items_offset: 24,
                                pair_size: 32,
                                key_offset: 0,
                                value_offset: 24,
                            },
                            table_offset: 0,
                        },
                    ),
                ),
            },
        ],
    },
)
