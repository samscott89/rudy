name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Run static tests (can run on any platform with checked-in artifacts)
  static-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Verify test artifacts exist
      run: |
        echo "Checking for test artifacts..."
        ls -la rudy-db/test-artifacts/ || echo "No test-artifacts directory found"
        if [ -d "rudy-db/test-artifacts" ]; then
          find rudy-db/test-artifacts -type f -name "*" | head -10
        else
          echo "⚠️  Test artifacts not found. Please run 'cargo xtask build-test-artifacts' locally and commit the results."
          exit 1
        fi
    
    - name: Generate test binaries
      run: cargo xtask generate-test-binaries
    
    - name: Run static tests
      run: cargo test -p rudy-db --test static_tests

  # Run dynamic tests on each platform
  dynamic-tests:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Run dynamic tests
      run: cargo test -p rudy-db --test dynamic_tests --target ${{ matrix.target }}
    
    - name: Run live introspection tests
      run: cargo test -p rudy-db --test live_introspection --target ${{ matrix.target }}

  # Run all other tests
  unit-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Run unit tests
      run: cargo test --lib --all-features
    
    - name: Run doc tests
      run: cargo test --doc --all-features