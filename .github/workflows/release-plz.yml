name: Release-plz

on:
  push:
    branches:
      - main

jobs:
  release-plz-release:
    name: Release-plz release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PLZ_TOKEN }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Run release-plz
        id: release-plz
        uses: release-plz/action@v0.5
        with:
          command: release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      - name: Upload rudy_lldb.py to releases
        if: contains(steps.release-plz.outputs.releases, 'rudy-lldb')
        run: |
          # Wait a moment for the release to be fully created
          sleep 5
          
          # Find the latest rudy-lldb release specifically (tag starts with rudy-lldb-)
          LATEST_TAG=$(gh release list --limit 50 | grep "^rudy-lldb-" | awk '{print $1}' | head -n1)
          if [ -n "$LATEST_TAG" ]; then
            echo "Uploading rudy_lldb.py to rudy-lldb release $LATEST_TAG"
            gh release upload $LATEST_TAG ./rudy-lldb/python/rudy_lldb.py --clobber
          else
            echo "No rudy-lldb release found"
            echo "Available releases:"
            gh release list --limit 10
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN }}

  release-plz-pr:
    name: Release-plz PR
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    concurrency:
      group: release-plz-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PLZ_TOKEN }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          command: release-pr
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
